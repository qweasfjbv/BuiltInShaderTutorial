// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#pragma kernel Clear

#define PI2 6.28318530718

RWTexture2D<float4> Result;
int texResolution;

float4 fillColor;
float4 clearColor;
int sides;
float time;

float random(float2 pt, float seed)
{
	const float a = 12.9898;
	const float b = 78.233;
	const float c = 43758.543123;
	return frac(sin(dot(pt, float2(a, b)) + seed) * c);
}

float polygon(float2 pt, float2 center, float radius, int sides, float rotate, float edge_thickness){
    pt -= center;

    //Angle and radius from the current pixel /
    float theta = atan2(pt.y, pt.x) + rotate;
    float rad = PI2/float(sides);

    // Shaping function that modulate the distance
    float d = cos(floor(0.5 + theta/rad)*rad-theta)*length(pt);

    return 1.0 - smoothstep(radius, radius + edge_thickness, d);
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	float2 pos = float2((((float2) id.xy) / (float) texResolution) - 0.5);
	
    float inPolygon = polygon(pos, 0, 0.15, 6, time, 0.001);
	
	float noise = random(id.xy, time);
	float4 color = lerp(clearColor, fillColor * noise, inPolygon);

    Result[id.xy] = color;
}
