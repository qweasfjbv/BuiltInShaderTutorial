// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel MeshDeform

RWTexture2D<float4> Result;

struct Vertex
{
	float3 position;
	float3 normal;
};

RWStructuredBuffer<Vertex> vertexBuffer;
StructuredBuffer<Vertex> initialBuffer;		// shader에서 read-only임
float delta;
float radius;

[numthreads(1,1,1)]
void MeshDeform (uint3 id : SV_DispatchThreadID)
{
	// 위치 보간
	float3 initialPos = initialBuffer[id.x].position;
	float3 s = float3(normalize(initialPos) * radius);
	float3 pos = lerp(initialPos, s, delta);

	// 노말 보간
	float3 initialNormal = initialBuffer[id.x].normal;
	float3 snormal = normalize(initialPos);
	float3 norm = lerp(initialNormal, snormal, delta);
	
	vertexBuffer[id.x].normal = norm;
	vertexBuffer[id.x].position = pos;
}
